#!/bin/bash
#
# -----------------------------
# LOOK FOR FREE MACHINES ON PBS
# -----------------------------
#
# List available queues
  if [[ "$( hostname )" != "avogadro"* ]]; then echo "ERROR: Not on avogadro"; exit 1; fi
  if [[ "${#}" -eq 0 && $( hostname ) == "avogadro"* ]]; then
    echo "-----------------+-------------+-------+----------------------+------------"
    echo " Node     | CPUs | Mem |  HDD  | Clock | Proc                 | Flag (I04) "
    echo "-----------------+-------------+-------+----------------------+------------"
    echo " Natta    | 2x4  |  24 |   100 |  2.67 | Intel Xeon X5550     | nehalem    "
    echo " Zewail   | 2x4  |  12 | 2,000 |  2.27 | Intel Xeon E5520     | nehalem    "
    echo " Kohn     | 2x6  |  24 |   100 |  2.67 | Intel Xeon X5650     | nehalem    "
    echo " Curie    | 2x8  |  64 | 2,000 |  2.60 | Intel Xeon E5-2670   | sandybridge"
    echo " Hoffmann | 2x8  | 128 | 2,000 |  3.30 | Intel Xeon E5-2667v2 | sandybridge"
    echo " Lee      | 2x12 | 128 | 1,000 |  2.70 | Intel Xeon E5-2697v2 | sandybridge"
    echo " Pople    | 4x16 | 128 |   240 |  2.30 | AMD Opteron 6276     | istanbul   "
    echo "-----------------+-------------+-------+----------------------+------------"
  fi
#
# Look for free machines
  if [[ ! -x $( command -v pbsnodes ) ]]; then exit; fi
  allnode="$( mktemp )"; pbsnodes -a > "${allnode}"
  trynode="$( mktemp )"; sed -n '1,/^$/p' ${allnode} > "${trynode}"
  while [[ -s ${trynode} ]]; do
#   Cheat GoTo because Bash IF statements are hard
    for i in 1; do
      grep -q -E "zewail|kohn|pople|curie|hoffmann|lee" $trynode || break
      grep -q "state = free" $trynode || break
      grep -q "jobs =" $trynode && break
      head -n 1 $trynode
    done
#   Delete the checked machine from the top of the file
    sed -i '1,/^$/ d' ${allnode}
    sed -n '1,/^$/p'  ${allnode} > "${trynode}"
  done
  rm -- "${allnode}" "${trynode}"
  exit
